apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven' // ADD THIS
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

group='net.intari'



android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 2
        versionName "1.0"
        consumerProguardFiles 'proguard-rules.pro'
    }

}

dependencies {
    // add dependencies here
    //Android support
    implementation (["com.android.support:support-v4:$android_support_version",
                     "com.android.support:appcompat-v7:$android_support_version",
    ])

    //Android Lifecycle components
    // Lifecycles only (no ViewModel or LiveData)
    // per https://developer.android.com/topic/libraries/architecture/adding-components.html it's better to use 1.0.3 for runtime?
    implementation (["android.arch.lifecycle:runtime:${architectureComponentsVersion}",
                     "android.arch.lifecycle:extensions:${architectureComponentsVersion}",
                     "android.arch.lifecycle:common-java8:${architectureComponentsVersion}",
    ])
    kapt "android.arch.lifecycle:compiler:${architectureComponentsVersion}"


    implementation 'net.intari:CustomLogger:1.0.24'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // Kotlin Coroutines
    implementation (["org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version",
                     "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"])


}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
repositories {
    google()
    mavenCentral()
}

// uncomment to build a jar file in addition to the default aar file
//android.libraryVariants.all { variant ->
//    def name = variant.buildType.name
//    def task = project.tasks.create "jar${name.capitalize()}", Jar
//    task.dependsOn variant.javaCompile
//    task.from variant.javaCompile.destinationDir
//    artifacts.add('archives', task);
//}

